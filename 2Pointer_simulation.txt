vector<int> height = [1,8,6,2,5,4,8,3,7];
int max_water = 0;

int left = 0;
int right = height.size() - 1 = 8; 

while (left < right) { // 0 < 8 TRUE
	int current_water = min(height[left], height[right]) * (right - left);
	current_water = min(1, 7) * (8-0) = 1 * 8 = 8;
	
	max_water = max(max_water, current_water);
	max_water = max(0, 8) = 8;
	
	if (height[left] < height[right]) { // 1 < 7 TRUE
		left++; // left = 1
	}
	
while (left < right) { // 1 < 8 TRUE
	current_water = min(8, 7) * (8-1) = 7 * 7 = 49;
	max_water = max(8, 49) = 49;
	
	if (height[left] < height[right]) { 8 < 7 FALSE
	}
	else {
		right--; // right = 7
	}
		
while (left < right) { // 1 < 7 TRUE
	current_water = min(8, 3) * (3-1) = 3 * 2 = 6;
	max_water = max(49, 6) = 49;
	
	if (height[left] < height[right]) { 8 < 3 FALSE
	}
	else {
		right--; // right = 6;
	}
	
while (left < right) { // 1 < 6 TRUE
	current_water = min(8, 8) * (6 - 1) = 8 * 5 = 40;
	max_water = max(49, 40) = 49;
	
	if (height[left] < height[right]) { // 8 < 8 FALSE
	}
	else {
		right--; right = 5;
	}
	
while (left < right) { // 1 < 5 TRUE
	current_water = min(8, 4) * (5-1) = 16;
	max_water = max(49, 16) = 49;
	
	if (height[left] < height[right]) { // 8 < 4 FALSE
	}
	else {
		right--; right = 4;
	}

while (left < right) { //1 < 4 TRUE
	current_water = min(8, 5) * (4-1) = 5 * 3 = 15;
	max_water = max(49, 15) = 49;
	
	if (height[left] < height[right]) { 8 < 5 FALSE
	}
	else {
		right--; right = 3;
	}
	
while (left < right) { // 1 < 3 TRUE
	current_water = min(8, 2) * (3-1) = 4;
	max_water = max(49, 4) = 49;
	
	if (height[left] < height[right]) { // 8 < 2 FALSE
	}
	else {
		right--; right = 2
	}
	
while (left < right) { // 1 < 2 TRUE
	current_water = min(8, 6) * (2-1) = 6 * 1 = 6;
	max_water = max(49, 6) = 49;
	
	if (height[left] < height[right]) { // 8 < 6 FALSE
	}
	else {
		right--
	}
	
while (left < right) { // 1 < 1 FALSE
}

return max_water = 49;


		